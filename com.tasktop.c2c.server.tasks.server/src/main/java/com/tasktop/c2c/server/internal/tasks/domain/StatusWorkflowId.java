/*******************************************************************************
 * Copyright (c) 2010, 2012 Tasktop Technologies
 * Copyright (c) 2010, 2011 SpringSource, a division of VMware
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Tasktop Technologies - initial API and implementation
 ******************************************************************************/
package com.tasktop.c2c.server.internal.tasks.domain;

// Generated May 26, 2010 11:31:55 AM by Hibernate Tools 3.3.0.GA

import javax.persistence.Column;
import javax.persistence.Embeddable;

import org.eclipse.persistence.annotations.Convert;

/**
 * StatusWorkflowId generated by hbm2java
 */
@Embeddable
@SuppressWarnings("serial")
public class StatusWorkflowId implements java.io.Serializable {

	private Short oldStatus;
	private short newStatus;
	private boolean requireComment;

	public StatusWorkflowId() {
	}

	public StatusWorkflowId(short newStatus, boolean requireComment) {
		this.newStatus = newStatus;
		this.requireComment = requireComment;
	}

	public StatusWorkflowId(Short oldStatus, short newStatus, boolean requireComment) {
		this.oldStatus = oldStatus;
		this.newStatus = newStatus;
		this.requireComment = requireComment;
	}

	@Column(name = "old_status")
	public Short getOldStatus() {
		return this.oldStatus;
	}

	public void setOldStatus(Short oldStatus) {
		this.oldStatus = oldStatus;
	}

	@Column(name = "new_status", nullable = false)
	public short getNewStatus() {
		return this.newStatus;
	}

	public void setNewStatus(short newStatus) {
		this.newStatus = newStatus;
	}

	@Column(name = "require_comment", nullable = false)
	@Convert("booleanToByte")
	public boolean getRequireComment() {
		return this.requireComment;
	}

	public void setRequireComment(boolean requireComment) {
		this.requireComment = requireComment;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + newStatus;
		result = prime * result + ((oldStatus == null) ? 0 : oldStatus.hashCode());
		result = prime * result + (requireComment ? 1231 : 1237);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		StatusWorkflowId other = (StatusWorkflowId) obj;
		if (newStatus != other.newStatus)
			return false;
		if (oldStatus == null) {
			if (other.oldStatus != null)
				return false;
		} else if (!oldStatus.equals(other.oldStatus))
			return false;
		if (requireComment != other.requireComment)
			return false;
		return true;
	}

}
