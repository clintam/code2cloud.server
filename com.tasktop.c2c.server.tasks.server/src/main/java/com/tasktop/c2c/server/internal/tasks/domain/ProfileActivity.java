/*******************************************************************************
 * Copyright (c) 2010, 2012 Tasktop Technologies
 * Copyright (c) 2010, 2011 SpringSource, a division of VMware
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Tasktop Technologies - initial API and implementation
 ******************************************************************************/
package com.tasktop.c2c.server.internal.tasks.domain;

// Generated May 26, 2010 11:31:55 AM by Hibernate Tools 3.3.0.GA

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * ProfilesActivity generated by hbm2java
 */
@Entity
@Table(name = "profiles_activity")
@SuppressWarnings("serial")
public class ProfileActivity implements java.io.Serializable {

	private ProfileActivityId id;
	private Profile profilesByUserid;
	private Profile profilesByWho;
	private Fielddef fielddefs;

	public ProfileActivity() {
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "userid", column = @Column(name = "userid", nullable = false)),
			@AttributeOverride(name = "who", column = @Column(name = "who", nullable = false)),
			@AttributeOverride(name = "profilesWhen", column = @Column(name = "profiles_when", nullable = false, length = 19)),
			@AttributeOverride(name = "fieldid", column = @Column(name = "fieldid", nullable = false)),
			@AttributeOverride(name = "oldvalue", column = @Column(name = "oldvalue")),
			@AttributeOverride(name = "newvalue", column = @Column(name = "newvalue")) })
	public ProfileActivityId getId() {
		return this.id;
	}

	public void setId(ProfileActivityId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "userid", nullable = false, insertable = false, updatable = false)
	public Profile getProfilesByUserid() {
		return this.profilesByUserid;
	}

	public void setProfilesByUserid(Profile profilesByUserid) {
		this.profilesByUserid = profilesByUserid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "who", nullable = false, insertable = false, updatable = false)
	public Profile getProfilesByWho() {
		return this.profilesByWho;
	}

	public void setProfilesByWho(Profile profilesByWho) {
		this.profilesByWho = profilesByWho;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "fieldid", nullable = false, insertable = false, updatable = false)
	public Fielddef getFielddefs() {
		return this.fielddefs;
	}

	public void setFielddefs(Fielddef fielddefs) {
		this.fielddefs = fielddefs;
	}

}
