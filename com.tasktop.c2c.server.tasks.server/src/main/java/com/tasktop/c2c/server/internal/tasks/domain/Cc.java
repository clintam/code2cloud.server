/*******************************************************************************
 * Copyright (c) 2010, 2012 Tasktop Technologies
 * Copyright (c) 2010, 2011 SpringSource, a division of VMware
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Tasktop Technologies - initial API and implementation
 ******************************************************************************/
package com.tasktop.c2c.server.internal.tasks.domain;

// Generated May 26, 2010 11:31:55 AM by Hibernate Tools 3.3.0.GA

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Cc generated by hbm2java
 */
@Entity
@Table(name = "cc", uniqueConstraints = @UniqueConstraint(columnNames = { "bug_id", "who" }))
@SuppressWarnings("serial")
public class Cc implements java.io.Serializable {

	private CcId id;
	private Task bugs;
	private Profile profiles;

	public Cc() {
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "bugId", column = @Column(name = "bug_id", nullable = false)),
			@AttributeOverride(name = "who", column = @Column(name = "who", nullable = false)) })
	public CcId getId() {
		return this.id;
	}

	public void setId(CcId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "bug_id", nullable = false, insertable = false, updatable = false)
	public Task getBugs() {
		return this.bugs;
	}

	public void setBugs(Task bugs) {
		this.bugs = bugs;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "who", nullable = false, insertable = false, updatable = false)
	public Profile getProfiles() {
		return this.profiles;
	}

	public void setProfiles(Profile profiles) {
		this.profiles = profiles;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Cc other = (Cc) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}

}
