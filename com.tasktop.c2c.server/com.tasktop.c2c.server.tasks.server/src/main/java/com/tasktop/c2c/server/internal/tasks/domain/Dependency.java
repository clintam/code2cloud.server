/*******************************************************************************
 * Copyright (c) 2010, 2012 Tasktop Technologies
 * Copyright (c) 2010, 2011 SpringSource, a division of VMware
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Tasktop Technologies - initial API and implementation
 ******************************************************************************/
package com.tasktop.c2c.server.internal.tasks.domain;

// Generated May 26, 2010 11:31:55 AM by Hibernate Tools 3.3.0.GA

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Dependencies generated by hbm2java
 */
@Entity
@Table(name = "dependencies")
@SuppressWarnings("serial")
public class Dependency implements java.io.Serializable {

	private DependencyId id;
	private Task bugsByDependson;
	private Task bugsByBlocked;

	public Dependency() {
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "blocked", column = @Column(name = "blocked", nullable = false)),
			@AttributeOverride(name = "dependson", column = @Column(name = "dependson", nullable = false)) })
	public DependencyId getId() {
		return this.id;
	}

	public void setId(DependencyId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "dependson", nullable = false, insertable = false, updatable = false)
	public Task getBugsByDependson() {
		return this.bugsByDependson;
	}

	public void setBugsByDependson(Task bugsByDependson) {
		this.bugsByDependson = bugsByDependson;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "blocked", nullable = false, insertable = false, updatable = false)
	public Task getBugsByBlocked() {
		return this.bugsByBlocked;
	}

	public void setBugsByBlocked(Task bugsByBlocked) {
		this.bugsByBlocked = bugsByBlocked;
	}

	@Override
	public boolean equals(Object other) {
		if (other == null) {
			return false;
		}
		if (!(other instanceof Dependency)) {
			return false;
		}
		if (this.id == null) {
			return super.equals(other);
		}
		Dependency otherDep = (Dependency) other;
		if (otherDep.id == null) {
			return false;
		}
		return this.id.equals(otherDep.id);
	}

	@Override
	public int hashCode() {
		if (this.id == null) {
			return super.hashCode();
		}
		return this.id.hashCode();
	}
}
