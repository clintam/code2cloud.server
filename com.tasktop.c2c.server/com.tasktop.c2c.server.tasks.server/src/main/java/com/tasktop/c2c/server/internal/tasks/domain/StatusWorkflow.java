/*******************************************************************************
 * Copyright (c) 2010, 2012 Tasktop Technologies
 * Copyright (c) 2010, 2011 SpringSource, a division of VMware
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Tasktop Technologies - initial API and implementation
 ******************************************************************************/
package com.tasktop.c2c.server.internal.tasks.domain;

// Generated May 26, 2010 11:31:55 AM by Hibernate Tools 3.3.0.GA

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * StatusWorkflow generated by hbm2java
 */
@Entity
@Table(name = "status_workflow", uniqueConstraints = @UniqueConstraint(columnNames = { "old_status", "new_status" }))
@SuppressWarnings("serial")
public class StatusWorkflow implements java.io.Serializable {

	private StatusWorkflowId id;
	private TaskStatus newStatus;
	private TaskStatus oldStatus;

	public StatusWorkflow() {
	}

	@EmbeddedId
	@AttributeOverrides({ @AttributeOverride(name = "oldStatus", column = @Column(name = "old_status")),
			@AttributeOverride(name = "newStatus", column = @Column(name = "new_status", nullable = false)),
			@AttributeOverride(name = "requireComment", column = @Column(name = "require_comment", nullable = false)) })
	public StatusWorkflowId getId() {
		return this.id;
	}

	public void setId(StatusWorkflowId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "new_status", nullable = false, insertable = false, updatable = false)
	public TaskStatus getNewStatus() {
		return this.newStatus;
	}

	public void setNewStatus(TaskStatus bugStatusByNewStatus) {
		this.newStatus = bugStatusByNewStatus;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "old_status", insertable = false, updatable = false)
	public TaskStatus getOldStatus() {
		return this.oldStatus;
	}

	public void setOldStatus(TaskStatus bugStatusByOldStatus) {
		this.oldStatus = bugStatusByOldStatus;
	}

}
