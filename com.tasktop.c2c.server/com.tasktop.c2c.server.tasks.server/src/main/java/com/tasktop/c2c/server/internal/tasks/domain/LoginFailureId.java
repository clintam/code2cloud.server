/*******************************************************************************
 * Copyright (c) 2010, 2012 Tasktop Technologies
 * Copyright (c) 2010, 2011 SpringSource, a division of VMware
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Tasktop Technologies - initial API and implementation
 ******************************************************************************/
package com.tasktop.c2c.server.internal.tasks.domain;

// Generated May 26, 2010 11:31:55 AM by Hibernate Tools 3.3.0.GA

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Embeddable;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * LoginFailureId generated by hbm2java
 */
@Embeddable
@SuppressWarnings("serial")
public class LoginFailureId implements java.io.Serializable {

	private int userId;
	private Date loginTime;
	private String ipAddr;

	public LoginFailureId() {
	}

	public LoginFailureId(int userId, Date loginTime, String ipAddr) {
		this.userId = userId;
		this.loginTime = loginTime;
		this.ipAddr = ipAddr;
	}

	@Column(name = "user_id", nullable = false)
	public int getUserId() {
		return this.userId;
	}

	public void setUserId(int userId) {
		this.userId = userId;
	}

	@Column(name = "login_time", nullable = false, length = 19)
	@Temporal(TemporalType.TIMESTAMP)
	public Date getLoginTime() {
		return this.loginTime;
	}

	public void setLoginTime(Date loginTime) {
		this.loginTime = loginTime;
	}

	@Column(name = "ip_addr", nullable = false, length = 40)
	public String getIpAddr() {
		return this.ipAddr;
	}

	public void setIpAddr(String ipAddr) {
		this.ipAddr = ipAddr;
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof LoginFailureId))
			return false;
		LoginFailureId castOther = (LoginFailureId) other;

		return (this.getUserId() == castOther.getUserId())
				&& ((this.getLoginTime() == castOther.getLoginTime()) || (this.getLoginTime() != null
						&& castOther.getLoginTime() != null && this.getLoginTime().equals(castOther.getLoginTime())))
				&& ((this.getIpAddr() == castOther.getIpAddr()) || (this.getIpAddr() != null
						&& castOther.getIpAddr() != null && this.getIpAddr().equals(castOther.getIpAddr())));
	}

	public int hashCode() {
		int result = 17;

		result = 37 * result + this.getUserId();
		result = 37 * result + (getLoginTime() == null ? 0 : this.getLoginTime().hashCode());
		result = 37 * result + (getIpAddr() == null ? 0 : this.getIpAddr().hashCode());
		return result;
	}

}
