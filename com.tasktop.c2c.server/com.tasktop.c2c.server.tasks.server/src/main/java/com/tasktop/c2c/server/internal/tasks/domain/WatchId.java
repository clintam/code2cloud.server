/*******************************************************************************
 * Copyright (c) 2010, 2012 Tasktop Technologies
 * Copyright (c) 2010, 2011 SpringSource, a division of VMware
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Tasktop Technologies - initial API and implementation
 ******************************************************************************/
package com.tasktop.c2c.server.internal.tasks.domain;

// Generated May 26, 2010 11:31:55 AM by Hibernate Tools 3.3.0.GA

import javax.persistence.Column;
import javax.persistence.Embeddable;

/**
 * WatchId generated by hbm2java
 */
@Embeddable
@SuppressWarnings("serial")
public class WatchId implements java.io.Serializable {

	private int watcher;
	private int watched;

	public WatchId() {
	}

	public WatchId(int watcher, int watched) {
		this.watcher = watcher;
		this.watched = watched;
	}

	@Column(name = "watcher", nullable = false)
	public int getWatcher() {
		return this.watcher;
	}

	public void setWatcher(int watcher) {
		this.watcher = watcher;
	}

	@Column(name = "watched", nullable = false)
	public int getWatched() {
		return this.watched;
	}

	public void setWatched(int watched) {
		this.watched = watched;
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof WatchId))
			return false;
		WatchId castOther = (WatchId) other;

		return (this.getWatcher() == castOther.getWatcher()) && (this.getWatched() == castOther.getWatched());
	}

	public int hashCode() {
		int result = 17;

		result = 37 * result + this.getWatcher();
		result = 37 * result + this.getWatched();
		return result;
	}

}
